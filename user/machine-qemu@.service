[Unit]
Description=qemu vm for %i

Requires=machine-snapshot@%i.service
After=machine-snapshot@%i.service

# we mount this data volume
Requires=machine-snapshot@virtdata.service
After=machine-snapshot@virtdata.service

[Service]
Type=simple

Slice=machines.slice

EnvironmentFile=/home/abdo/virt/etc/machines.conf
EnvironmentFile=/home/abdo/virt/etc/machines.d/%i.conf

# use pulseaudio on host
Environment=QEMU_AUDIO_DRV=pa

Environment=DISK_DATA_SNAPSHOT=snapshot/virtdata.qcow2

ExecStartPre=/usr/bin/mkdir -p "%t/qemu/${MACHINE}"

# we use directory locks. It is crude but atomic and effective!
ExecStartPre=/usr/bin/mkdir -m 777 "${QEMU}/${DISK_SNAPSHOT}.lock" "${QEMU}/${DISK_DATA_SNAPSHOT}.lock"

# NOTE: I couldn't make the monitor interface work with a tcp socket.

ExecStart=/usr/bin/qemu-system-x86_64 -name ${MACHINE} \
    -boot menu=on \
    -machine type=q35,accel=kvm \
    -cpu host -smp 2 \
    -m 2048 \
    -monitor unix:%t/qemu/${MACHINE}/control,server,nowait \
    -serial telnet:localhost:${PORT_SERIAL},server,nowait \
    -netdev bridge,id=net_tap,br=brvirt \
    -drive media=cdrom,id=disk_cdrom,if=none,file=${QEMU}/${DISK_CDROM} \
    -drive media=disk,id=disk_root,if=none,file=${QEMU}/${DISK_SNAPSHOT} \
    -drive media=disk,id=disk_data,if=none,file=${QEMU}/${DISK_DATA_SNAPSHOT} \
    -soundhw hda \
    -device ${DEVICE_VIDEO} \
    -device virtio-serial \
    -device virtio-balloon \
    -device ${DEVICE_NET},netdev=net_tap \
    -device ide-cd,drive=disk_cdrom \
    -device ${DEVICE_BLOCK},drive=disk_root \
    -device ${DEVICE_BLOCK},drive=disk_data \    
    $QEMU_ARGS

# NOTE: No ExecStop. Sending SIGTERM to qemu performs a quit, which means clean for qemu,
# not clean for guest. We can't wait until the guest is ready though, so it is ok.

# TODO: machined needs privileges. I think systemd 220 relaxes this!
# TODO: Use RegisterMachineWithNetwork sayssusaio  pass array of ifindices
# TODO: machined assigns quemu's user service to user@1000.service. When terminating everything dies.

# ExecStartPost=/usr/bin/sudo busctl call \
#     org.freedesktop.machine1 /org/freedesktop/machine1 \
#     org.freedesktop.machine1.Manager RegisterMachine \
#     sayssus ${MACHINE} 0 machine vm ${MAINPID} ''

# ExecStopPost=/usr/bin/sudo busctl call \
#     org.freedesktop.machine1 /org/freedesktop/machine1 \
#     org.freedesktop.machine1.Manager TerminateMachine \
#     s ${MACHINE}

ExecStopPost=/usr/bin/rmdir "${QEMU}/${DISK_SNAPSHOT}.lock" "${QEMU}/${DISK_DATA_SNAPSHOT}.lock"

