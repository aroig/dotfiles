[Unit]
Description=qemu vm for %i

[Service]
Type=simple

Slice=machines.slice

EnvironmentFile=/home/abdo/.config/systemd/conf/machines.conf
EnvironmentFile=/home/abdo/.config/systemd/conf/machine.d/%i.conf

# NOTE: we use directory locks to make sure no two services attempt to
# access the same image. It is crude but atomic and effective!

ExecStartPre=/usr/bin/mkdir -m 777 "${QEMU}/${DISK}.lock"
ExecStartPre=/usr/bin/mkdir -p "%t/qemu/${MACHINE}"

ExecStart=/usr/bin/qemu-system-x86_64 -name ${MACHINE} -boot menu=on                  \
    -machine type=pc,accel=kvm -cpu host -smp 2 -m 2048 -balloon virtio               \
    -netdev bridge,id=tapvirt,br=brvirt                                               \
    -device virtio-net,netdev=tapvirt                                                 \
    -drive media=cdrom,file=${MEDIA}/${CDROM}                                         \
    -drive media=disk,if=virtio,file=${QEMU}/${DISK}                                  \
    -device virtio-serial                                                             \
    -monitor unix:%t/qemu/${MACHINE}/control,server,nowait                            \
    -serial unix:%t/qemu/${MACHINE}/console,server,nowait                             \
     $QEMU_VIDEO $QEMU_ARGS

# TODO: machined needs privileges. I think systemd 220 relaxes this!
# TODO: Use RegisterMachineWithNetwork sayssusaio  pass array of ifindices

# NOTE: This doesn't work from a user service. It assigns it to user@1000.service
# And kills everything when terminating the machine.

# ExecStartPost=/usr/bin/sudo busctl call                                               \
#     org.freedesktop.machine1 /org/freedesktop/machine1                                \
#     org.freedesktop.machine1.Manager RegisterMachine                                  \
#     sayssus ${MACHINE} 0 machine vm ${MAINPID} ''

ExecStop=/usr/bin/sh -c "echo system_powerdown |                                      \
    socat - UNIX-CONNECT:%t/qemu/${MACHINE}/control > /dev/null;                      \
    true"

# ExecStartPost=/usr/bin/sudo busctl call                                               \
#     org.freedesktop.machine1 /org/freedesktop/machine1                                \
#     org.freedesktop.machine1.Manager TerminateMachine                                 \
#     s ${MACHINE}

ExecStopPost=/usr/bin/rmdir "${QEMU}/${DISK}.lock"

