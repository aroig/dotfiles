" vim: filetype=vifm :

" General Settings
" --------------------------------------
set vicmd=vim
set history=100
set undolevels=100
set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
set fastrun

" Don't do too many requests to slow file systems
set slowfs=curlftpfs

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks

set norunexec
set fusehome=/media



" Presentation
" --------------------------------------
set sortnumbers

set novimhelp

" Use KiB, MiB, ... instead of KB, MB, ...
set noiec

set timefmt=%Y-%m-%d\ %H:%M

" Selected color scheme
colorscheme abdo

" Show list of matches on tab completion in command-line mode
set wildmenu

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Search
set nohlsearch
set incsearch

set scrolloff=4

" Set custom status line look
set statusline=" %A %u:%g | %t%= %15s %20d  "



" Panels
" --------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" windo set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" windo filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/



" Commands
" --------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart



" File associations
" --------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf, PS, djvu
filextype *.pdf,*.ps,*.eps,*.ps.gz,*.djvu zathura %c &
fileviewer *.pdf pdftotext -nopgbrk %c -

" Media
filextype <audio/*,video/*> mpv %c &
fileviewer <audio/*,video/*> mediainfo %c

" fileviewer <video/*> ffprobe -pretty %c 2>&1
" fileviewer *.mp3 mp3info %c
" fileviewer *.flac soxi %c

" Image
filextype <image/*> feh %f &
fileviewer <image/*> exiftool %c
" fileviewer <image/*> convert -identify %f -verbose /dev/null

" Web
filextype *.xhtml,*.html,*.htm chromium %f &

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" MD5
filetype *.md5 md5sum -c %f

" GPG signature
filetype *.asc !!gpg --verify %c

" Archives
filetype *.7z,*.ace,*.ar,*.arc,*.bz2,*.cab,*.cpio,*.cpt,*.deb,*.dgc,*.dmg,*.gz,*.iso,*.jar,*.msi,*.pkg,*.rar,*.shar,*.tar,*.tgz,*.xar,*.xpi,*.xz,*.zip
         \ aunpack %f
fileviewer *.7z,*.ace,*.ar,*.arc,*.bz2,*.cab,*.cpio,*.cpt,*.deb,*.dgc,*.dmg,*.gz,*.iso,*.jar,*.msi,*.pkg,*.rar,*.shar,*.tar,*.tgz,*.xar,*.xpi,*.xz,*.zip
           \ als %f

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx, docx2txt.pl %f -

" Directories
fileviewer .*/,*/ tree -C %f

" Syntax highlighting in preview
fileviewer <text/*,*/xml> vimcat %c

" Displaying pictures in terminal
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
filetype * xdg-open

" Do nothing if no fileviewer match
fileviewer * false


" Key bindings
" --------------------------------------

" Sample mappings

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in existing instance of gvim
nnoremap o :!gvim --remote-tab-silent %f<cr>
" Open file in new instance of gvim
nnoremap O :!gvim %f<cr>

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Yank current directory path into the clipboard
nnoremap yd :!echo %d | xclip %i<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo %c:p | xclip %i<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw<c-w>

" Open console in current directory
nnoremap ,t :!xterm &<cr>

" Open vim to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | execute ':!vim $MYVIFMRC' | restart<cr>
" Open gvim to edit vifmrc
nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" Block particular shortcut
" nnoremap <left> <nop>
