# ===================================================================
# This file contains the default startup commands for ranger.
# To change them, it is recommended to create the file
# ~/.config/ranger/rc.conf and add your custom commands there.
#
# If you copy this whole file there, add this line to your options.py
# so it is not loaded twice:
#
#     load_default_rc = False
#
# The purpose of this file is mainly to define keybindings and settings.
# For running more complex python code, please create a plugin in "plugins/" or
# a command in "commands.py".
#
# Each line is a command that will be run before the user interface
# is initialized.  As a result, you can not use commands which rely
# on the UI such as :delete or :mark.
# ===================================================================


# ===================================================================
# == Options
# ===================================================================

# How many columns are there, and what are their relative widths?
set column_ratios 2,5,5

# Which files should be hidden? (regular expression)
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

# Show hidden files? You can toggle this by typing 'zh'
set show_hidden false

# Which script is used to generate file previews?
# ranger ships with scope.sh, a script that calls external programs (see
# README for dependencies) to preview images, archives, etc.
set preview_script ~/.config/ranger/scope.sh

# Use the external preview script or display simple plain text previews?
set use_preview_script true

# Be aware of version control systems and display information about their state.
# Supported version control systems: Git, Mercurial.
# set vcs_aware true
# set vcs_backends git,hg

# Use a unicode "..." character to mark cut-off filenames?
set unicode_ellipsis true

# Show dotfiles in the bookmark preview box?
set show_hidden_bookmarks true

# Which colorscheme to use?  These colorschemes are available by default:
# default, default88, jungle, snow
# Snow is monochrome and default88 uses 88 colors.
set colorscheme default

# Preview files on the rightmost column?
# And collapse (shrink) the last column if there is nothing to preview?
set preview_files true
set preview_directories true
set collapse_preview false

# Save the console history on exit?
set save_console_history true

# Draw a progress bar in the status bar which displays the average state of all
# currently running tasks which support progress bars?
set draw_progress_bar_in_status_bar True

# Draw borders around columns?
set draw_borders false

# Display the directory name in tabs?
set dirname_in_tabs false

# Enable the mouse support?
set mouse_enabled true

# Display the file size in the main column or status bar?
set display_size_in_main_column true
set display_size_in_status_bar true

# Display files tags in all columns or only in main column?
set display_tags_in_all_columns true

# Set a title for the window?
set update_title false

# Shorten the title if it gets long?  The number defines how many
# directories are displayed at once, False turns off this feature.
set shorten_title 3

# Abbreviate $HOME with ~ in the titlebar (first line) of ranger?
set tilde_in_titlebar false

# How many directory-changes or console-commands should be kept in history?
set max_history_size 20
set max_console_history_size 50

# Try to keep so much space between the top/bottom border when scrolling:
set scroll_offset 8

# Flush the input after each key hit?  (Noticable when ranger lags)
set flushinput true

# Padding on the right when there's no preview?
# This allows you to click into the space to run the file.
set padding_right true

# Save bookmarks (used with mX and `X) instantly?
# This helps to synchronize bookmarks between multiple ranger
# instances but leads to *slight* performance loss.
# When false, bookmarks are saved when ranger is exited.
set autosave_bookmarks true

# You can display the "real" cumulative size of directories by using the
# command :get_cumulative_size or typing "dc".  The size is expensive to
# calculate and will not be updated automatically.  You can choose
# to update it automatically though by turning on this option:
set autoupdate_cumulative_size false

# Turning this on makes sense for screen readers:
set show_cursor false

# One of: size, basename, mtime, type
set sort natural

# Additional sorting options
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true

# Enable this if key combinations with the Alt Key don't work for you.
# (Especially on xterm)
set xterm_alt_key true



# ===================================================================
# == Ranger interaction
# ===================================================================

# main
map R          reload_cwd
map <C-r>      reset
map <C-l>      redraw_window
map <C-c>      abort
map <esc>      change_mode normal

map ?          help
map W          display_log
map w          taskview_open

map :          console
map ;          console
map !          console shell 

# Don't want such an easy quit
# unmap q Q      


# terminal and shell
map st         terminal
map ss         shell $SHELL


# command aliases
alias q        quit
alias Q        quit
alias q!       quitall
alias Q!       quitall
alias qall     quitall



# ===================================================================
# == Browser navigation
# ===================================================================

# my bookmarks
map bb         cd ~/Software/build
map bc         cd ~/Software/conf
map bd         cd ~/Software/devel

map bp         cd ~/Work/papers
map bt         cd ~/Work/teaching

map bh         cd ~
map bm         cd /media

map bw         cd ~/Downloads
map bk         cd ~/Desktop


# Tabs
map gc         tab_new
map gx         tab_close
map gu         tab_restore

map gn         tab_move 1
map gp         tab_move -1

copymap gn     <A-Right>
copymap gp     <A-Left>

copymap gn     <tab>
copymap gp     <S-tab>


# searching
map /          console search 
map n          search_next
map N          search_next forward=False

# map ct         search_next order=tag
# map cs         search_next order=size
# map ci         search_next order=mimetype
# map cc         search_next order=ctime
# map cm         search_next order=mtime
# map ca         search_next order=atime


# moving around
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1

map <A-UP>     move_parent -1
map <A-DOWN>   move_parent 1


# vim-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

copymap <A-UP>     K
copymap <A-DOWN>   J


# jumping around
map f          console find 
map cd         console cd 

map <A-o>      history_go -1
map <A-i>      history_go 1   # C-i is the same as tab

# map }        traverse


# ===================================================================
# == File actions
# ===================================================================

# tagging / marking
map t          tag_toggle
map T          tag_remove
map <C-t><any> tag_toggle tag=%any
map <Space>    mark_files toggle=True
map v          mark_files all=True toggle=True
map V          toggle_visual_mode


# copy / paste
map pp         paste
map po         paste overwrite=True
map pl         paste_symlink relative=False
map pL         paste_symlink relative=True

map dd         cut
map du         uncut
map da         cut mode=add
map dr         cut mode=remove

map yy         copy
map yu         uncut
map ya         copy mode=add
map yr         copy mode=remove

map yp         shell -d echo -n %d/%f | xsel -i
# map yd shell -d echo -n %d    | xsel -i
# map yn shell -d echo -n %f    | xsel -i


# delete and trash
map DD         console trash
map DX         console delete
map <DELETE>   console trash
map <INSERT>   console touch 


# file manipulations
map A          eval fm.open_console('rename ' + fm.thisfile.basename, position=7)
map =          chmod


# file info
map iu         shell du --max-depth=1 -h --apparent-size | $PAGER
map iU         shell du --max-depth=1 -h --apparent-size | sort -rh | $PAGER
map im         shell mimetype %f | $PAGER
map ihs        shell sha1sum %f | $PAGER
map ihm        shell md5sum %f | $PAGER


# Execute action
map xx         chain draw_possible_programs; console open_with 
map xr         console open_with run
map xe         console open_with extract


# Edit
map ev         open_with editor
map ee         open_with emacs


# VCS
map <C-v>s     stage
map <C-v>u     unstage
map <C-v>d     diff
map <C-v>l     log

# TODO: checkout, commit


# ===================================================================
# == Ranger settings
# ===================================================================

# Sorting
map or eval fm.settings.sort_reverse ^= True
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort="type";    set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort="type";    set sort_reverse=True

map dc get_cumulative_size


# Settings
map zc    toggle_option collapse_preview
map zd    toggle_option sort_directories_first
map zh    toggle_option show_hidden
map <C-h> toggle_option show_hidden
map zi    toggle_option flushinput
map zm    toggle_option mouse_enabled
map zp    toggle_option preview_files
map zP    toggle_option preview_directories
map zs    toggle_option sort_case_insensitive
map zu    toggle_option autoupdate_cumulative_size
map zv    toggle_option use_preview_script
map zf    console filter 



# ===================================================================
# == Define keys for the console
# ===================================================================
# Note: Unmapped keys are passed directly to the console.

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>


# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)


# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()


# And of course the emacs way
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>


# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>


# This special expression allows typing in numerals:
cmap <allow_quantifiers> false



# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>


# Basic
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file



# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>


# Changing priority and deleting tasks
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()


# Basic
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>
