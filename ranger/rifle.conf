# vim: ft=cfg
#
# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | $DISPLAY is not empty (i.e. Xorg runs)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.


# WARNING: this file is sensible to lines with spaces only!?!


#-------------------------------------------
# HTML
#-------------------------------------------
ext x?html?, label dwb,      has dwb,         X = sdrun dwb "$@"
ext x?html?, label uzbl,     has uzbl-tabbed, X = sdrun uzbl-tabbed "$@"
ext x?html?, label chromium, has chromium,    X = sdrun chromium "$@"
ext x?html?, label firefox,  has firefox,     X = sdrun firefox "$@"



#--------------------------------------------
# Audio and video
#-------------------------------------------
mime ^audio|video, label mpv, has mpv, flag f, X = sdrun mpv --force-window --really-quiet "$@"
mime ^audio|video, label vlc, has vlc, flag f, X = sdrun vlc "$@"



#-------------------------------------------
# Image Viewing
#-------------------------------------------
mime ^image, label feh,  has feh,  flag f, X = sdrun feh "$@"
mime ^image, label gimp, has gimp, flag f, X = sdrun gimp "$@"
ext svg,     label dwb,  has dwb,  flag f, X = sdrun dwb "$@"



#-------------------------------------------
# Documents
#-------------------------------------------
ext pdf|djvu, label zathura, has zathura,    flag f, X = sdrun zathura "$@"
ext pdf,      label evince, has evince,      flag f, X = sdrun evince "$@"
ext djvu,     label djview, has djview,      flag f, X = sdrun djview "$@"
ext epub,     label ebook, has ebook-viewer, flag f, X = sdrun ebook-viewer "$@"

ext od[dfgpst]|xlsx?|docx?, label libreoffice, has libreoffice, X = sdrun libreoffice "$@"
ext xlt|xlw|gnm|gnumeric, label libreoffice, has libreoffice,   X = sdrun libreoffice "$@"



#-------------------------------------------
# Archives
#-------------------------------------------
# NOTE: This requires atool
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  label ls,      has als     = als -- "$@" | "$PAGER"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, label ls,      has als     = als -- "$@" | "$PAGER"
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  label extract, has aunpack = aunpack -- "$@"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, label extract, has aunpack = aunpack -- "$@"



#-------------------------------------------
# Generic fallbacks
#-------------------------------------------

label vim                            = $EDITOR -- "$@"

# NOTE: Do not use emacsclient --no-wait. emacs does not keep buffer-list per frame this way.
label emacs, flag f,               X = $EMACS -- "$@"
label emacs                          = $EMACS -nw -- "$@"

ext x?html?, label browser,        X = sdrun $BROWSER "$@"
ext x?html?, label browser           = links -- "$@"

mime ^text, label pager              = $PAGER  -- "$@"

directory, label terminal,         X = sdrun $TERMCMD -d "$@"

directory, label magit, flag f,    X = $EMACS -e "(abdo-vcs-main \"$1\")"
directory, label magit               = $EMACS -nw -e "(abdo-vcs-main \"$1\")"

directory, label filemanager,      X = sdrun $FILEMANAGER "$@"
directory, label filemanager         = ranger -- "$@"

directory, label ranger,           X = sdrun $TERMCMD -d "$1" -e ranger
directory, label ranger              = ranger -- "$@"



#--------------------------------------------
# Run scripts
#-------------------------------------------
ext py,  label run = python      -- "$1"
ext lua, label run = lua         -- "$1"
ext pl,  label run = perl        -- "$1"
ext rb,  label run = ruby        -- "$1"
ext sh,  label run = bash        -- "$1"
ext php, label run = php         -- "$1"



#-------------------------------------------
# Last resort
#-------------------------------------------
# don't want to do this, I redirect xdg-open to rifle!
# else , X, label xdgopen                        = xdg-open "$@"
else                                           = ask